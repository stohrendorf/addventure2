<?php

namespace DoctrineProxies\__CG__\addventure;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Episode extends \addventure\Episode implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', '' . "\0" . 'addventure\\Episode' . "\0" . 'id', '' . "\0" . 'addventure\\Episode' . "\0" . 'title', '' . "\0" . 'addventure\\Episode' . "\0" . 'created', '' . "\0" . 'addventure\\Episode' . "\0" . 'postNotes', '' . "\0" . 'addventure\\Episode' . "\0" . 'preNotes', '' . "\0" . 'addventure\\Episode' . "\0" . 'text', '' . "\0" . 'addventure\\Episode' . "\0" . 'hitCount', '' . "\0" . 'addventure\\Episode' . "\0" . 'likes', '' . "\0" . 'addventure\\Episode' . "\0" . 'dislikes', '' . "\0" . 'addventure\\Episode' . "\0" . 'parent', '' . "\0" . 'addventure\\Episode' . "\0" . 'author', '' . "\0" . 'addventure\\Episode' . "\0" . 'storylineTag', '' . "\0" . 'addventure\\Episode' . "\0" . 'simpleTags', '' . "\0" . 'addventure\\Episode' . "\0" . 'linkable', '' . "\0" . 'addventure\\Episode' . "\0" . 'comments');
        }

        return array('__isInitialized__', '' . "\0" . 'addventure\\Episode' . "\0" . 'id', '' . "\0" . 'addventure\\Episode' . "\0" . 'title', '' . "\0" . 'addventure\\Episode' . "\0" . 'created', '' . "\0" . 'addventure\\Episode' . "\0" . 'postNotes', '' . "\0" . 'addventure\\Episode' . "\0" . 'preNotes', '' . "\0" . 'addventure\\Episode' . "\0" . 'text', '' . "\0" . 'addventure\\Episode' . "\0" . 'hitCount', '' . "\0" . 'addventure\\Episode' . "\0" . 'likes', '' . "\0" . 'addventure\\Episode' . "\0" . 'dislikes', '' . "\0" . 'addventure\\Episode' . "\0" . 'parent', '' . "\0" . 'addventure\\Episode' . "\0" . 'author', '' . "\0" . 'addventure\\Episode' . "\0" . 'storylineTag', '' . "\0" . 'addventure\\Episode' . "\0" . 'simpleTags', '' . "\0" . 'addventure\\Episode' . "\0" . 'linkable', '' . "\0" . 'addventure\\Episode' . "\0" . 'comments');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Episode $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getComments()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getComments', array());

        return parent::getComments();
    }

    /**
     * {@inheritDoc}
     */
    public function setComments($comments)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setComments', array($comments));

        return parent::setComments($comments);
    }

    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreated()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreated', array());

        return parent::getCreated();
    }

    /**
     * {@inheritDoc}
     */
    public function getPostNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPostNotes', array());

        return parent::getPostNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function getPreNotes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPreNotes', array());

        return parent::getPreNotes();
    }

    /**
     * {@inheritDoc}
     */
    public function getText()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getText', array());

        return parent::getText();
    }

    /**
     * {@inheritDoc}
     */
    public function getHitCount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHitCount', array());

        return parent::getHitCount();
    }

    /**
     * {@inheritDoc}
     */
    public function getLikes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLikes', array());

        return parent::getLikes();
    }

    /**
     * {@inheritDoc}
     */
    public function getDislikes()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDislikes', array());

        return parent::getDislikes();
    }

    /**
     * {@inheritDoc}
     */
    public function getParent()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', array());

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthor()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthor', array());

        return parent::getAuthor();
    }

    /**
     * {@inheritDoc}
     */
    public function getStorylineTag()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStorylineTag', array());

        return parent::getStorylineTag();
    }

    /**
     * {@inheritDoc}
     */
    public function getSimpleTags()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSimpleTags', array());

        return parent::getSimpleTags();
    }

    /**
     * {@inheritDoc}
     */
    public function setId($id)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', array($id));

        return parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function setCreated(\DateTime $created)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreated', array($created));

        return parent::setCreated($created);
    }

    /**
     * {@inheritDoc}
     */
    public function setPostNotes($notes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPostNotes', array($notes));

        return parent::setPostNotes($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function setPreNotes($notes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPreNotes', array($notes));

        return parent::setPreNotes($notes);
    }

    /**
     * {@inheritDoc}
     */
    public function setText($text)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setText', array($text));

        return parent::setText($text);
    }

    /**
     * {@inheritDoc}
     */
    public function setHitCount($hitCount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHitCount', array($hitCount));

        return parent::setHitCount($hitCount);
    }

    /**
     * {@inheritDoc}
     */
    public function setLikes($likes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLikes', array($likes));

        return parent::setLikes($likes);
    }

    /**
     * {@inheritDoc}
     */
    public function setDislikes($dislikes)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDislikes', array($dislikes));

        return parent::setDislikes($dislikes);
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(\addventure\Episode $parent)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', array($parent));

        return parent::setParent($parent);
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthor(\addventure\AuthorName $author)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthor', array($author));

        return parent::setAuthor($author);
    }

    /**
     * {@inheritDoc}
     */
    public function setStorylineTag(\addventure\StorylineTag $storylineTag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStorylineTag', array($storylineTag));

        return parent::setStorylineTag($storylineTag);
    }

    /**
     * {@inheritDoc}
     */
    public function setSimpleTags($simpleTag)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSimpleTags', array($simpleTag));

        return parent::setSimpleTags($simpleTag);
    }

    /**
     * {@inheritDoc}
     */
    public function getLinkable()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLinkable', array());

        return parent::getLinkable();
    }

    /**
     * {@inheritDoc}
     */
    public function setLinkable($linkable)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLinkable', array($linkable));

        return parent::setLinkable($linkable);
    }

    /**
     * {@inheritDoc}
     */
    public function getAutoTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAutoTitle', array());

        return parent::getAutoTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function toJson()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toJson', array());

        return parent::toJson();
    }

    /**
     * {@inheritDoc}
     */
    public function getChildLinks()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildLinks', array());

        return parent::getChildLinks();
    }

    /**
     * {@inheritDoc}
     */
    public function toSmarty()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toSmarty', array());

        return parent::toSmarty();
    }

    /**
     * {@inheritDoc}
     */
    public function toRss(\SimpleXMLElement &$channel)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toRss', array($channel));

        return parent::toRss($channel);
    }

    /**
     * {@inheritDoc}
     */
    public function toAtom(\SimpleXMLElement &$feed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'toAtom', array($feed));

        return parent::toAtom($feed);
    }

}
